/*
! tailwindcss v3.2.3 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
*/

html {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: Inter var, ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font family by default.
2. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

:root,
[data-theme] {
  background-color: hsla(var(--b1) / var(--tw-bg-opacity, 1));
  color: hsla(var(--bc) / var(--tw-text-opacity, 1));
}

html {
  -webkit-tap-highlight-color: transparent;
}

:root {
  color-scheme: light;
  --pf: 302.59 100% 40%;
  --sf: 27.294 100% 40%;
  --af: 72 98.425% 40.157%;
  --nf: 238.42 43.182% 13.804%;
  --b2: 0 0% 88.235%;
  --b3: 0 0% 79.412%;
  --bc: 0 0% 19.608%;
  --pc: 302.59 100% 90%;
  --sc: 27.294 100% 10%;
  --ac: 72 100% 10.039%;
  --nc: 238.42 99.052% 83.451%;
  --inc: 209.85 100% 11.569%;
  --suc: 148.87 100% 11.608%;
  --wac: 52.574 100% 11.451%;
  --erc: 0.78261 100% 89.02%;
  --animation-btn: 0.25s;
  --animation-input: .2s;
  --btn-text-case: uppercase;
  --btn-focus-scale: 0.95;
  --border-btn: 1px;
  --tab-border: 1px;
  --tab-radius: 0.5rem;
  --p: 302.59 100% 50%;
  --s: 27.294 100% 50%;
  --a: 72 98.425% 50.196%;
  --n: 238.42 43.182% 17.255%;
  --b1: 0 0% 98.039%;
  --in: 209.85 91.628% 57.843%;
  --su: 148.87 49.533% 58.039%;
  --wa: 52.574 92.661% 57.255%;
  --er: 0.78261 100% 45.098%;
  --rounded-box: 1.25rem;
  --rounded-btn: 1rem;
  --rounded-badge: 1rem;
}

html,
  body {
  padding: 0px;
  margin: 0px;
  --tw-text-opacity: 1;
  color: rgb(187 187 187 / var(--tw-text-opacity));
  font-size: 12px;
}

/* ... */

#__next {
  height: 100%;
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

.alert {
  display: flex;
  width: 100%;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  gap: 1rem;
  --tw-bg-opacity: 1;
  background-color: hsl(var(--b2, var(--b1)) / var(--tw-bg-opacity));
  padding: 1rem;
  border-radius: var(--rounded-box, 1rem);
}

.alert > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.5rem * var(--tw-space-y-reverse));
}

@media (min-width: 768px) {
  .alert {
    flex-direction: row;
  }

  .alert > :not([hidden]) ~ :not([hidden]) {
    --tw-space-y-reverse: 0;
    margin-top: calc(0px * calc(1 - var(--tw-space-y-reverse)));
    margin-bottom: calc(0px * var(--tw-space-y-reverse));
  }
}

.alert > :where(*) {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.avatar.placeholder > div {
  display: flex;
  align-items: center;
  justify-content: center;
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}

.checkbox {
  flex-shrink: 0;
  --chkbg: var(--bc);
  --chkfg: var(--b1);
  height: 1.5rem;
  width: 1.5rem;
  cursor: pointer;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border-width: 1px;
  border-color: hsl(var(--bc) / var(--tw-border-opacity));
  --tw-border-opacity: 0.2;
  border-radius: var(--rounded-btn, 0.5rem);
}

.label {
  display: flex;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  align-items: center;
  justify-content: space-between;
  padding-left: 0.25rem;
  padding-right: 0.25rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.input {
  flex-shrink: 1;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-duration: 200ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  height: 3rem;
  padding-left: 1rem;
  padding-right: 1rem;
  font-size: 1rem;
  line-height: 2;
  line-height: 1.5rem;
  border-width: 1px;
  border-color: hsl(var(--bc) / var(--tw-border-opacity));
  --tw-border-opacity: 0;
  --tw-bg-opacity: 1;
  background-color: hsl(var(--b1) / var(--tw-bg-opacity));
  border-radius: var(--rounded-btn, 0.5rem);
}

.input-group > .input {
  isolation: isolate;
}

.input-group > *,
  .input-group > .input,
  .input-group > .select {
  border-radius: 0px;
}

.range {
  height: 1.5rem;
  width: 100%;
  cursor: pointer;
  -moz-appearance: none;
       appearance: none;
  -webkit-appearance: none;
  --range-shdw: var(--bc);
  overflow: hidden;
  background-color: transparent;
  border-radius: var(--rounded-box, 1rem);
}

.range:focus {
  outline: none;
}

.btm-nav>*:where(.active) {
  border-top-width: 2px;
  --tw-bg-opacity: 1;
  background-color: hsl(var(--b1) / var(--tw-bg-opacity));
}

.btm-nav>* .label {
  font-size: 1rem;
  line-height: 1.5rem;
}

@keyframes button-pop {
  0% {
    transform: scale(var(--btn-focus-scale, 0.95));
  }

  40% {
    transform: scale(1.02);
  }

  100% {
    transform: scale(1);
  }
}

.checkbox:focus-visible {
  outline: 2px solid hsl(var(--bc));
  outline-offset: 2px;
}

.checkbox:checked,
  .checkbox[checked="true"],
  .checkbox[aria-checked="true"] {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--bc) / var(--tw-bg-opacity));
  background-repeat: no-repeat;
  animation: checkmark var(--animation-input, 0.2s) ease-in-out;
  background-image: linear-gradient(-45deg, transparent 65%, hsl(var(--chkbg)) 65.99%), linear-gradient(45deg, transparent 75%, hsl(var(--chkbg)) 75.99%), linear-gradient(-45deg, hsl(var(--chkbg)) 40%, transparent 40.99%), linear-gradient(45deg, hsl(var(--chkbg)) 30%, hsl(var(--chkfg)) 30.99%, hsl(var(--chkfg)) 40%, transparent 40.99%), linear-gradient(-45deg, hsl(var(--chkfg)) 50%, hsl(var(--chkbg)) 50.99%);
}

.checkbox:indeterminate {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--bc) / var(--tw-bg-opacity));
  background-repeat: no-repeat;
  animation: checkmark var(--animation-input, 0.2s) ease-in-out;
  background-image: linear-gradient(90deg, transparent 80%, hsl(var(--chkbg)) 80%), linear-gradient(-90deg, transparent 80%, hsl(var(--chkbg)) 80%), linear-gradient(0deg, hsl(var(--chkbg)) 43%, hsl(var(--chkfg)) 43%, hsl(var(--chkfg)) 57%, hsl(var(--chkbg)) 57%);
}

.checkbox-secondary {
  --chkbg: var(--s);
  --chkfg: var(--sc);
  --tw-border-opacity: 1;
  border-color: hsl(var(--s) / var(--tw-border-opacity));
}

.checkbox-secondary:hover {
  --tw-border-opacity: 1;
  border-color: hsl(var(--s) / var(--tw-border-opacity));
}

.checkbox-secondary:focus-visible {
  outline: 2px solid hsl(var(--s));
}

.checkbox-secondary:checked,
    .checkbox-secondary[checked="true"],
    .checkbox-secondary[aria-checked="true"] {
  --tw-border-opacity: 1;
  border-color: hsl(var(--s) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--s) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--sc) / var(--tw-text-opacity));
}

.checkbox:disabled {
  cursor: not-allowed;
  border-color: transparent;
  --tw-bg-opacity: 1;
  background-color: hsl(var(--bc) / var(--tw-bg-opacity));
  opacity: 0.2;
}

@keyframes checkmark {
  0% {
    background-position-y: 5px;
  }

  50% {
    background-position-y: -2px;
  }

  100% {
    background-position-y: 0;
  }
}

[dir="rtl"] .checkbox:checked,
    [dir="rtl"] .checkbox[checked="true"],
    [dir="rtl"] .checkbox[aria-checked="true"] {
  background-image: linear-gradient(45deg, transparent 65%, hsl(var(--chkbg)) 65.99%), linear-gradient(-45deg, transparent 75%, hsl(var(--chkbg)) 75.99%), linear-gradient(45deg, hsl(var(--chkbg)) 40%, transparent 40.99%), linear-gradient(-45deg, hsl(var(--chkbg)) 30%, hsl(var(--chkfg)) 30.99%, hsl(var(--chkfg)) 40%, transparent 40.99%), linear-gradient(45deg, hsl(var(--chkfg)) 50%, hsl(var(--chkbg)) 50.99%);
}

.label a:hover {
  --tw-text-opacity: 1;
  color: hsl(var(--bc) / var(--tw-text-opacity));
}

.input[list]::-webkit-calendar-picker-indicator {
  line-height: 1em;
}

.input:focus {
  outline: 2px solid hsla(var(--bc) / 0.2);
  outline-offset: 2px;
}

.input-disabled,
  .input[disabled] {
  cursor: not-allowed;
  --tw-border-opacity: 1;
  border-color: hsl(var(--b2, var(--b1)) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--b2, var(--b1)) / var(--tw-bg-opacity));
  --tw-text-opacity: 0.2;
}

.input-disabled::-moz-placeholder, .input[disabled]::-moz-placeholder {
  color: hsl(var(--bc) / var(--tw-placeholder-opacity));
  --tw-placeholder-opacity: 0.2;
}

.input-disabled::placeholder,
  .input[disabled]::placeholder {
  color: hsl(var(--bc) / var(--tw-placeholder-opacity));
  --tw-placeholder-opacity: 0.2;
}

.menu :where(li:not(.menu-title):not(:empty)) > :where(:not(ul).active),
  .menu :where(li:not(.menu-title):not(:empty)) > :where(*:not(ul):active) {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--p) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--pc) / var(--tw-text-opacity));
}

@keyframes progress-loading {
  50% {
    left: 107%;
  }
}

@keyframes radiomark {
  0% {
    box-shadow: 0 0 0 12px hsl(var(--b1)) inset, 0 0 0 12px hsl(var(--b1)) inset;
  }

  50% {
    box-shadow: 0 0 0 3px hsl(var(--b1)) inset, 0 0 0 3px hsl(var(--b1)) inset;
  }

  100% {
    box-shadow: 0 0 0 4px hsl(var(--b1)) inset, 0 0 0 4px hsl(var(--b1)) inset;
  }
}

.range:focus-visible::-webkit-slider-thumb {
  --focus-shadow: 0 0 0 6px hsl(var(--b1)) inset, 0 0 0 2rem hsl(var(--range-shdw)) inset;
}

.range:focus-visible::-moz-range-thumb {
  --focus-shadow: 0 0 0 6px hsl(var(--b1)) inset, 0 0 0 2rem hsl(var(--range-shdw)) inset;
}

.range::-webkit-slider-runnable-track {
  height: 0.5rem;
  width: 100%;
  border-radius: var(--rounded-box, 1rem);
  background-color: hsla(var(--bc) / 0.1);
}

.range::-moz-range-track {
  height: 0.5rem;
  width: 100%;
  border-radius: var(--rounded-box, 1rem);
  background-color: hsla(var(--bc) / 0.1);
}

.range::-webkit-slider-thumb {
  background-color: hsl(var(--b1));
  position: relative;
  height: 1.5rem;
  width: 1.5rem;
  border-style: none;
  border-radius: var(--rounded-box, 1rem);
  appearance: none;
  -webkit-appearance: none;
  top: 50%;
  color: hsl(var(--range-shdw));
  transform: translateY(-50%);
  --filler-size: 100rem;
  --filler-offset: 0.6rem;
  box-shadow: 0 0 0 3px hsl(var(--range-shdw)) inset, var(--focus-shadow, 0 0), calc(var(--filler-size) * -1 - var(--filler-offset)) 0 0 var(--filler-size);
}

.range::-moz-range-thumb {
  background-color: hsl(var(--b1));
  position: relative;
  height: 1.5rem;
  width: 1.5rem;
  border-style: none;
  border-radius: var(--rounded-box, 1rem);
  top: 50%;
  color: hsl(var(--range-shdw));
  --filler-size: 100rem;
  --filler-offset: 0.5rem;
  box-shadow: 0 0 0 3px hsl(var(--range-shdw)) inset, var(--focus-shadow, 0 0), calc(var(--filler-size) * -1 - var(--filler-offset)) 0 0 var(--filler-size);
}

@keyframes rating-pop {
  0% {
    transform: translateY(-0.125em);
  }

  40% {
    transform: translateY(-0.125em);
  }

  100% {
    transform: translateY(0);
  }
}

.table tr.active th,
    .table tr.active td,
    .table tr.active:nth-child(even) th,
    .table tr.active:nth-child(even) td {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--b3, var(--b2)) / var(--tw-bg-opacity));
}

@keyframes toast-pop {
  0% {
    transform: scale(0.9);
    opacity: 0;
  }

  100% {
    transform: scale(1);
    opacity: 1;
  }
}

.btm-nav-xs>*:where(.active) {
  border-top-width: 1px;
}

.btm-nav-sm>*:where(.active) {
  border-top-width: 2px;
}

.btm-nav-md>*:where(.active) {
  border-top-width: 2px;
}

.btm-nav-lg>*:where(.active) {
  border-top-width: 4px;
}

.fixed {
  position: fixed;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.inset-0 {
  top: 0px;
  right: 0px;
  bottom: 0px;
  left: 0px;
}

.left-\[79vw\] {
  left: 79vw;
}

.top-\[10vh\] {
  top: 10vh;
}

.top-\[15vh\] {
  top: 15vh;
}

.z-10 {
  z-index: 10;
}

.col-span-3 {
  grid-column: span 3 / span 3;
}

.col-span-2 {
  grid-column: span 2 / span 2;
}

.col-span-1 {
  grid-column: span 1 / span 1;
}

.col-span-9 {
  grid-column: span 9 / span 9;
}

.col-span-7 {
  grid-column: span 7 / span 7;
}

.my-\[3rem\] {
  margin-top: 3rem;
  margin-bottom: 3rem;
}

.my-\[1rem\] {
  margin-top: 1rem;
  margin-bottom: 1rem;
}

.mx-\[3rem\] {
  margin-left: 3rem;
  margin-right: 3rem;
}

.mb-\[7rem\] {
  margin-bottom: 7rem;
}

.mr-\[0\.3rem\] {
  margin-right: 0.3rem;
}

.mt-\[2rem\] {
  margin-top: 2rem;
}

.mt-\[3rem\] {
  margin-top: 3rem;
}

.mr-\[1\.5rem\] {
  margin-right: 1.5rem;
}

.mt-\[0\.5rem\] {
  margin-top: 0.5rem;
}

.mt-\[1rem\] {
  margin-top: 1rem;
}

.mr-\[8px\] {
  margin-right: 8px;
}

.mr-\[0\.5rem\] {
  margin-right: 0.5rem;
}

.mb-\[2rem\] {
  margin-bottom: 2rem;
}

.mb-\[4rem\] {
  margin-bottom: 4rem;
}

.ml-4 {
  margin-left: 1rem;
}

.ml-\[3rem\] {
  margin-left: 3rem;
}

.mr-\[2rem\] {
  margin-right: 2rem;
}

.ml-\[1rem\] {
  margin-left: 1rem;
}

.ml-\[0\.5rem\] {
  margin-left: 0.5rem;
}

.mb-\[5rem\] {
  margin-bottom: 5rem;
}

.mb-\[1\.2rem\] {
  margin-bottom: 1.2rem;
}

.ml-\[2rem\] {
  margin-left: 2rem;
}

.mb-\[3rem\] {
  margin-bottom: 3rem;
}

.box-content {
  box-sizing: content-box;
}

.flex {
  display: flex;
}

.grid {
  display: grid;
}

.h-full {
  height: 100%;
}

.h-7 {
  height: 1.75rem;
}

.h-5 {
  height: 1.25rem;
}

.h-\[5vh\] {
  height: 5vh;
}

.h-\[85\%\] {
  height: 85%;
}

.h-\[30vh\] {
  height: 30vh;
}

.h-\[4rem\] {
  height: 4rem;
}

.h-9 {
  height: 2.25rem;
}

.h-6 {
  height: 1.5rem;
}

.h-\[40vh\] {
  height: 40vh;
}

.h-\[8vh\] {
  height: 8vh;
}

.h-\[9vh\] {
  height: 9vh;
}

.h-\[25vh\] {
  height: 25vh;
}

.h-\[65\%\] {
  height: 65%;
}

.h-\[3vh\] {
  height: 3vh;
}

.h-\[4vh\] {
  height: 4vh;
}

.h-\[35\%\] {
  height: 35%;
}

.h-\[6vh\] {
  height: 6vh;
}

.h-\[11vh\] {
  height: 11vh;
}

.h-\[7vh\] {
  height: 7vh;
}

.h-\[85vh\] {
  height: 85vh;
}

.h-4 {
  height: 1rem;
}

.min-h-full {
  min-height: 100%;
}

.w-full {
  width: 100%;
}

.w-\[80\%\] {
  width: 80%;
}

.w-7 {
  width: 1.75rem;
}

.w-5 {
  width: 1.25rem;
}

.w-\[13vw\] {
  width: 13vw;
}

.w-\[85\%\] {
  width: 85%;
}

.w-\[22\%\] {
  width: 22%;
}

.w-\[95\%\] {
  width: 95%;
}

.w-\[70\%\] {
  width: 70%;
}

.w-\[92\%\] {
  width: 92%;
}

.w-\[4rem\] {
  width: 4rem;
}

.w-9 {
  width: 2.25rem;
}

.w-\[60\%\] {
  width: 60%;
}

.w-6 {
  width: 1.5rem;
}

.w-\[90\%\] {
  width: 90%;
}

.w-\[8rem\] {
  width: 8rem;
}

.w-\[25\%\] {
  width: 25%;
}

.w-\[50\%\] {
  width: 50%;
}

.w-\[40\%\] {
  width: 40%;
}

.w-\[10rem\] {
  width: 10rem;
}

.w-\[20\%\] {
  width: 20%;
}

.w-\[4vh\] {
  width: 4vh;
}

.w-\[5\%\] {
  width: 5%;
}

.w-\[82\%\] {
  width: 82%;
}

.w-\[84\%\] {
  width: 84%;
}

.w-4 {
  width: 1rem;
}

.w-\[18\%\] {
  width: 18%;
}

.max-w-\[200px\] {
  max-width: 200px;
}

.max-w-\[50vw\] {
  max-width: 50vw;
}

.scale-95 {
  --tw-scale-x: .95;
  --tw-scale-y: .95;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.scale-100 {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.cursor-pointer {
  cursor: pointer;
}

.list-disc {
  list-style-type: disc;
}

.list-none {
  list-style-type: none;
}

.grid-cols-5 {
  grid-template-columns: repeat(5, minmax(0, 1fr));
}

.grid-cols-12 {
  grid-template-columns: repeat(12, minmax(0, 1fr));
}

.grid-rows-2 {
  grid-template-rows: repeat(2, minmax(0, 1fr));
}

.flex-col {
  flex-direction: column;
}

.flex-wrap {
  flex-wrap: wrap;
}

.items-start {
  align-items: flex-start;
}

.items-center {
  align-items: center;
}

.justify-start {
  justify-content: flex-start;
}

.justify-end {
  justify-content: flex-end;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.gap-\[2rem\] {
  gap: 2rem;
}

.gap-\[0\.5rem\] {
  gap: 0.5rem;
}

.gap-\[1rem\] {
  gap: 1rem;
}

.gap-y-\[2rem\] {
  row-gap: 2rem;
}

.gap-y-\[1rem\] {
  row-gap: 1rem;
}

.overflow-auto {
  overflow: auto;
}

.overflow-hidden {
  overflow: hidden;
}

.overflow-scroll {
  overflow: scroll;
}

.overflow-y-auto {
  overflow-y: auto;
}

.rounded-md {
  border-radius: 0.375rem;
}

.rounded-xl {
  border-radius: 0.75rem;
}

.rounded-full {
  border-radius: 9999px;
}

.rounded-lg {
  border-radius: 0.5rem;
}

.rounded-2xl {
  border-radius: 1rem;
}

.rounded-sm {
  border-radius: 0.125rem;
}

.rounded-l-xl {
  border-top-left-radius: 0.75rem;
  border-bottom-left-radius: 0.75rem;
}

.border {
  border-width: 1px;
}

.border-\[3px\] {
  border-width: 3px;
}

.border-t {
  border-top-width: 1px;
}

.border-l {
  border-left-width: 1px;
}

.border-b {
  border-bottom-width: 1px;
}

.border-r {
  border-right-width: 1px;
}

.border-neutral-content\/30 {
  border-color: hsl(var(--nc) / 0.3);
}

.border-neutral-content\/10 {
  border-color: hsl(var(--nc) / 0.1);
}

.border-white {
  --tw-border-opacity: 1;
  border-color: rgb(255 255 255 / var(--tw-border-opacity));
}

.border-base-content {
  --tw-border-opacity: 1;
  border-color: hsl(var(--bc) / var(--tw-border-opacity));
}

.border-neutral {
  --tw-border-opacity: 1;
  border-color: hsl(var(--n) / var(--tw-border-opacity));
}

.border-neutral\/60 {
  border-color: hsl(var(--n) / 0.6);
}

.border-neutral\/40 {
  border-color: hsl(var(--n) / 0.4);
}

.bg-base-100 {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--b1) / var(--tw-bg-opacity));
}

.bg-neutral-focus {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--nf, var(--n)) / var(--tw-bg-opacity));
}

.bg-transparent {
  background-color: transparent;
}

.bg-gray-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(243 244 246 / var(--tw-bg-opacity));
}

.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.bg-primary {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--p) / var(--tw-bg-opacity));
}

.bg-neutral-content\/30 {
  background-color: hsl(var(--nc) / 0.3);
}

.bg-error-content {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--erc, var(--nc)) / var(--tw-bg-opacity));
}

.bg-success {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--su) / var(--tw-bg-opacity));
}

.bg-black {
  --tw-bg-opacity: 1;
  background-color: rgb(0 0 0 / var(--tw-bg-opacity));
}

.bg-green-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(34 197 94 / var(--tw-bg-opacity));
}

.bg-base-200 {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--b2, var(--b1)) / var(--tw-bg-opacity));
}

.bg-base-200\/50 {
  background-color: hsl(var(--b2, var(--b1)) / 0.5);
}

.bg-accent {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--a) / var(--tw-bg-opacity));
}

.bg-neutral-content {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--nc) / var(--tw-bg-opacity));
}

.bg-neutral-content\/40 {
  background-color: hsl(var(--nc) / 0.4);
}

.bg-neutral-content\/10 {
  background-color: hsl(var(--nc) / 0.1);
}

.bg-neutral-content\/20 {
  background-color: hsl(var(--nc) / 0.2);
}

.bg-neutral {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--n) / var(--tw-bg-opacity));
}

.bg-accent\/20 {
  background-color: hsl(var(--a) / 0.2);
}

.bg-opacity-80 {
  --tw-bg-opacity: 0.8;
}

.stroke-\[1\.5px\] {
  stroke-width: 1.5px;
}

.stroke-\[3px\] {
  stroke-width: 3px;
}

.stroke-\[2px\] {
  stroke-width: 2px;
}

.stroke-\[1px\] {
  stroke-width: 1px;
}

.p-\[1rem\] {
  padding: 1rem;
}

.p-\[3rem\] {
  padding: 3rem;
}

.p-\[0\.5rem\] {
  padding: 0.5rem;
}

.p-4 {
  padding: 1rem;
}

.py-\[0\.5rem\] {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.px-\[18px\] {
  padding-left: 18px;
  padding-right: 18px;
}

.py-\[8px\] {
  padding-top: 8px;
  padding-bottom: 8px;
}

.px-\[16px\] {
  padding-left: 16px;
  padding-right: 16px;
}

.py-\[1rem\] {
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.px-\[2rem\] {
  padding-left: 2rem;
  padding-right: 2rem;
}

.px-\[3rem\] {
  padding-left: 3rem;
  padding-right: 3rem;
}

.pl-\[0\.2rem\] {
  padding-left: 0.2rem;
}

.pr-\[2rem\] {
  padding-right: 2rem;
}

.text-left {
  text-align: left;
}

.text-center {
  text-align: center;
}

.align-middle {
  vertical-align: middle;
}

.font-theme {
  font-family: Satoshi-Variable;
}

.font-sans {
  font-family: Inter var, ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
}

.text-\[16px\] {
  font-size: 16px;
}

.text-\[14px\] {
  font-size: 14px;
}

.text-2xl {
  font-size: 2rem;
}

.text-\[17px\] {
  font-size: 17px;
}

.text-\[13px\] {
  font-size: 13px;
}

.text-\[15px\] {
  font-size: 15px;
}

.text-base {
  font-size: 1rem;
}

.text-\[30px\] {
  font-size: 30px;
}

.text-\[2rem\] {
  font-size: 2rem;
}

.text-body {
  font-size: 16px;
}

.text-\[18px\] {
  font-size: 18px;
}

.text-\[19px\] {
  font-size: 19px;
}

.text-\[36px\] {
  font-size: 36px;
}

.font-regular {
  font-weight: 400;
}

.font-semibold {
  font-weight: 600;
}

.font-medium {
  font-weight: 500;
}

.font-black {
  font-weight: 900;
}

.font-bold {
  font-weight: 700;
}

.font-extrabold {
  font-weight: 800;
}

.font-light {
  font-weight: 300;
}

.font-\[14px\] {
  font-weight: 14px;
}

.leading-\[36px\] {
  line-height: 36px;
}

.leading-\[3rem\] {
  line-height: 3rem;
}

.leading-\[1\.75rem\] {
  line-height: 1.75rem;
}

.leading-\[4rem\] {
  line-height: 4rem;
}

.leading-\[5rem\] {
  line-height: 5rem;
}

.leading-\[2rem\] {
  line-height: 2rem;
}

.leading-\[10rem\] {
  line-height: 10rem;
}

.leading-\[7rem\] {
  line-height: 7rem;
}

.text-gray-900 {
  --tw-text-opacity: 1;
  color: rgb(17 24 39 / var(--tw-text-opacity));
}

.text-neutral-content\/50 {
  color: hsl(var(--nc) / 0.5);
}

.text-neutral-content {
  --tw-text-opacity: 1;
  color: hsl(var(--nc) / var(--tw-text-opacity));
}

.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.text-error-content {
  --tw-text-opacity: 1;
  color: hsl(var(--erc, var(--nc)) / var(--tw-text-opacity));
}

.text-success {
  --tw-text-opacity: 1;
  color: hsl(var(--su) / var(--tw-text-opacity));
}

.text-base-100 {
  --tw-text-opacity: 1;
  color: hsl(var(--b1) / var(--tw-text-opacity));
}

.text-base-content {
  --tw-text-opacity: 1;
  color: hsl(var(--bc) / var(--tw-text-opacity));
}

.text-neutral {
  --tw-text-opacity: 1;
  color: hsl(var(--n) / var(--tw-text-opacity));
}

.text-neutral\/70 {
  color: hsl(var(--n) / 0.7);
}

.text-neutral\/80 {
  color: hsl(var(--n) / 0.8);
}

.underline {
  text-decoration-line: underline;
}

.antialiased {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.opacity-0 {
  opacity: 0;
}

.opacity-100 {
  opacity: 1;
}

.shadow-md {
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-xl {
  --tw-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color), 0 8px 10px -6px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-lg {
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-gray-200\/50 {
  --tw-shadow-color: rgb(229 231 235 / 0.5);
  --tw-shadow: var(--tw-shadow-colored);
}

.outline-0 {
  outline-width: 0px;
}

.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.duration-300 {
  transition-duration: 300ms;
}

.duration-200 {
  transition-duration: 200ms;
}

.ease-out {
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
}

.ease-in {
  transition-timing-function: cubic-bezier(0.4, 0, 1, 1);
}

@font-face {
  font-family: 'Satoshi-Variable';

  src: url('../styles/Fonts/Satoshi/fonts/Satoshi-Variable.woff2') format('woff2'),
    url('../styles/Fonts/Satoshi/fonts/Satoshi-VariableItalic.woff') format('woff'),
    url('../styles/Fonts/Satoshi/fonts/Satoshi-Variable.ttf') format('truetype');

  font-weight: 300 900;

  font-display: swap;

  font-style: normal;
}

@font-face {
  font-family: 'Logo';

  src: url('../styles/Fonts/Subjectivity/Subjectivity-Bold.otf') format('opentype');

  font-weight: 600;

  font-display: swap;

  font-style: normal;
}

a {
  color: inherit;
  text-decoration: none;
}

* {
  box-sizing: border-box;
}

/* @media (prefers-color-scheme: dark) {
  html {
    color-scheme: dark;
  }
  body {
    color: white;
    background: black;
  }
} */

.placeholder\:ml-\[2rem\]::-moz-placeholder {
  margin-left: 2rem;
}

.placeholder\:ml-\[2rem\]::placeholder {
  margin-left: 2rem;
}

.placeholder\:ml-\[1rem\]::-moz-placeholder {
  margin-left: 1rem;
}

.placeholder\:ml-\[1rem\]::placeholder {
  margin-left: 1rem;
}

.placeholder\:w-full::-moz-placeholder {
  width: 100%;
}

.placeholder\:w-full::placeholder {
  width: 100%;
}

.placeholder\:text-\[14px\]::-moz-placeholder {
  font-size: 14px;
}

.placeholder\:text-\[14px\]::placeholder {
  font-size: 14px;
}

.placeholder\:text-\[17px\]::-moz-placeholder {
  font-size: 17px;
}

.placeholder\:text-\[17px\]::placeholder {
  font-size: 17px;
}

.placeholder\:font-semibold::-moz-placeholder {
  font-weight: 600;
}

.placeholder\:font-semibold::placeholder {
  font-weight: 600;
}

.placeholder\:font-regular::-moz-placeholder {
  font-weight: 400;
}

.placeholder\:font-regular::placeholder {
  font-weight: 400;
}

.placeholder\:font-black::-moz-placeholder {
  font-weight: 900;
}

.placeholder\:font-black::placeholder {
  font-weight: 900;
}

.placeholder\:text-white\/40::-moz-placeholder {
  color: rgb(255 255 255 / 0.4);
}

.placeholder\:text-white\/40::placeholder {
  color: rgb(255 255 255 / 0.4);
}

.placeholder\:text-neutral\/80::-moz-placeholder {
  color: hsl(var(--n) / 0.8);
}

.placeholder\:text-neutral\/80::placeholder {
  color: hsl(var(--n) / 0.8);
}

.hover\:border-neutral\/40:hover {
  border-color: hsl(var(--n) / 0.4);
}

.hover\:bg-neutral-content\/10:hover {
  background-color: hsl(var(--nc) / 0.1);
}

.hover\:bg-primary-focus:hover {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--pf, var(--p)) / var(--tw-bg-opacity));
}

.hover\:bg-accent:hover {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--a) / var(--tw-bg-opacity));
}

.focus\:outline-0:focus {
  outline-width: 0px;
}

.child\:pl-\[1\.5rem\] > * {
  padding-left: 1.5rem;
}

.child\:text-white\/40 > * {
  color: rgb(255 255 255 / 0.4);
}

@media (prefers-color-scheme: dark) {
  .dark\:border-base-100\/10 {
    border-color: hsl(var(--b1) / 0.1);
  }

  .dark\:bg-black\/10 {
    background-color: rgb(0 0 0 / 0.1);
  }

  .dark\:bg-base-content\/30 {
    background-color: hsl(var(--bc) / 0.3);
  }

  .dark\:text-base-100 {
    --tw-text-opacity: 1;
    color: hsl(var(--b1) / var(--tw-text-opacity));
  }

  .dark\:text-base-100\/50 {
    color: hsl(var(--b1) / 0.5);
  }

  .dark\:hover\:bg-black\/10:hover {
    background-color: rgb(0 0 0 / 0.1);
  }
}
